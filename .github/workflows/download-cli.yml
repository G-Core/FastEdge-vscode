name: Get FastEdge-lib Assets

on:
  workflow_call:
    inputs:
      cli_version:
        description: "FastEdge cli version"
        required: false
        type: string
        default: "latest"

jobs:
  determine-cli-version:
    runs-on: [self-hosted, ubuntu-22-04, regular]
    outputs:
      version: ${{ steps.determine-version.outputs.version }}
    steps:
      - name: Determine version
        id: determine-version
        run: |
          if [ "${{ inputs.cli_version }}" == "latest" ] || [ -z "${{ inputs.cli_version }}" ]; then
            echo "Fetching latest release version..."
            LATEST_VERSION=$(curl -s https://api.github.com/repos/G-Core/FastEdge-lib/releases/latest | jq -r .tag_name)
            echo "Latest version is $LATEST_VERSION"
            echo "version=$LATEST_VERSION"  >> $GITHUB_OUTPUT
          else
            echo "version=${{ inputs.cli_version }}" >> $GITHUB_OUTPUT
          fi

  download-and-verify:
    runs-on: [self-hosted, ubuntu-22-04, regular]
    needs: determine-cli-version
    strategy:
      matrix:
        include:
          - target: linux-x64
            os: ubuntu-latest
            file_name: x86_64-unknown-linux-gnu
            file_ext: tar.gz

          - target: darwin-arm64
            os: macos-latest
            file_name: aarch64-apple-darwin
            file_ext: tar.gz

          - target: win32
            os: windows-latest
            file_name: x86_64-pc-windows-msvc
            file_ext: zip

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Use version from determine-cli-version job
        id: used-cli-version
        run: |
          echo "VERSION=${{ needs.determine-cli-version.outputs.version }}" >> $GITHUB_ENV

      - name: Download FastEdge-lib assets
        run: |
          echo "Downloading version $VERSION for ${{ matrix.os }}"
          curl -L -o fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }} https://github.com/G-Core/FastEdge-lib/releases/download/$VERSION/fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}
          curl -L -o fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}.sha256 https://github.com/G-Core/FastEdge-lib/releases/download/$VERSION/fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}.sha256

      - name: Convert Windows SHA256 to Linux format
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          HASH=$(grep -oP '^[0-9a-f]{64}' fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}.sha256)
          echo "$HASH fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}" > fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}.sha256

      - name: Verify checksum
        run: |
          sha256sum -c fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}.sha256

      - name: Extract fastedge-run
        run: |
          if [[ ${{ matrix.os }} == 'windows-latest' ]]; then
            unzip fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}
          else
            tar -xzf fastedge-run-$VERSION-${{ matrix.file_name }}.${{ matrix.file_ext }}
          fi

      - name: Rename and copy fastedge-run
        run: |
          if [[ ${{ matrix.os }} == 'windows-latest' ]]; then
            cp fastedge-run-$VERSION-${{ matrix.file_name }}/fastedge-run.exe ./fastedge-cli/fastedge-run.exe
          else
            cp fastedge-run-$VERSION-${{ matrix.file_name }}/fastedge-run ./fastedge-cli/fastedge-run-${{ matrix.target }}
          fi

      - name: Create a RELEASE.json file
        run: |
          echo "{\"fastedge_run_version\": \"$VERSION\"}" > fastedge-cli/METADATA.json

      - name: Upload fastedge-run Artifact
        uses: actions/upload-artifact@v4
        with:
          name: fastedge-run-${{ matrix.os }}-artifact
          retention-days: 1
          path: |
            fastedge-cli/
